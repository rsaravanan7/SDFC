public class AddPrimaryContact implements Queueable{
    
    private Contact c;
    private String state;
    
    public AddPrimaryContact(Contact records, String state) {
        this.c = records;
        this.state = state;
    }
    
   public void execute(QueueableContext context) 
    {
         List<Account> ListAccount = [SELECT ID, Name ,(Select id,FirstName,LastName from contacts ) FROM ACCOUNT WHERE BillingState = :state LIMIT 200];
         List<Contact> lstContact = new List<Contact>();
         for (Account acc:ListAccount)
         {
                 Contact cont = c.clone();
                 cont.AccountId =  acc.id;
                 lstContact.add( cont );
         }
         
         if(lstContact.size() >0 )
         {
             insert lstContact;
         }
    }    

}

-------Test method------------

@IsTest
public class AddPrimaryContactTest {
    @testSetup 
    static void setup() {
        List<Account> accounts = new List<Account>();
        for (Integer i = 0; i < 50; i++) {
            accounts.add(new Account(name='Test Account'+i, BillingState='NY'));
            accounts.add(new Account(name='Test Account'+i+50, BillingState='CA'));
        }
        insert accounts;
    }
    
    static testmethod void testQueueable() {
        
        Contact co = new Contact(FirstName='Bill',LastName='Gates');
        String st= 'CA';
        
        AddPrimaryContact upd = new AddPrimaryContact(co, st);
        
        Test.startTest();        
        System.enqueueJob(upd);
        Test.stopTest();        
        
        System.assertEquals(50, [select count() from account where BillingState = :st]);
    }    
}
